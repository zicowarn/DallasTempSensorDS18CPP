{"name":"Dallastempsensords18cpp","tagline":"This c++ project provide a rein C++ API and represents a temperature sensor of type w1-thermosensor","body":"# DallasTempSensorDS18CPP\r\n===============================================================================\r\n\r\nThis c++ project provide a rein C++ API and represents a temperature sensor of type w1-thermosensor \r\n\r\n### File structure of this project:\r\n---\r\n>>> in folder src/error\r\n  >>>> - DallasTempSensorDS18CPPErrors.cpp\r\n  >>>> - DallasTempSensorDS18CPPErrors.h\r\n>>>  \r\n>>> in folder src/features\r\n  >>>> - DallasTempSensorDS18CPPFeatures.cpp\r\n  >>>> - DallasTempSensorDS18CPPFeatures.h\r\n>>>\r\n>>> in folder src\r\n  >>>> - DallasTempSensorDS18CPP.cpp  # for test the features\r\n>>> \r\n\r\n\r\n### Dependent head files:\r\n----\r\n```c++\r\n#include <map>\r\n#include <vector>\r\n#include <string>\r\n#include <iostream>\r\n#include <exception>\r\n#include <cxxabi.h>\r\n#include <execinfo.h>\r\n#include <sstream>\r\n#include <dirent.h>\r\n#include <stdlib.h>\r\n#include <unistd.h>\r\n#include <fstream>\r\n#include <algorithm>\r\n#include <string>\r\n#include <sys/stat.h>\r\n```\r\n\r\n## Usage:\r\n----\r\n```c++\r\nstd::cout << \"!!! Welcome to DallasTempSensorDS18CPP !!!\" << std::endl;\r\n/* You be allowed to create a instance of class DallasTempSensorDS18CPP,\r\nif you do not know type and id of sensors*/\r\nDallasTempSensorDS18Sensor mSensor(NULL, \"\");\r\n\r\n/* You be allowed to create a instance of class DallasTempSensorDS18CPP also like this, if you just do not know id of sensors*/\r\nDallasTempSensorDS18Sensor mSensor(DallasTempSensorDS18Sensor::THERM_SENSOR_DS18B20, \"\");\r\n\r\n/* You be allowed to create a instance of class DallasTempSensorDS18CPP also like this, if you exactly know id of sensors*/\r\nDallasTempSensorDS18Sensor mSensor(DallasTempSensorDS18Sensor::THERM_SENSOR_DS18B20,\"000006c4fdb1\");\r\n\r\nint units[3] = { DallasTempSensorDS18Sensor::DEGREES_C,DallasTempSensorDS18Sensor::DEGREES_F };\r\n\r\n/* You be allowed to get the values from the digital thermosensor. and\r\n * if you specify more than one temperature unit, you can get the converted\r\n * values of the specified units\r\n*/\r\nstd::vector<float> values = mSensor.get_temperatures(units);\r\nstd::cout << \"vector contains: \" << std::endl;\r\nfor (unsigned it = 0; it < values.size(); it++) {\r\n\t/* C\r\n\t * F\r\n\t */\r\n\tstd::cout << \" Values => \" << values[it] << std::endl;\r\n}\r\n\r\n/* You be allowed to get the values from the digital thermosensor. and\r\n * if you even do not specify any temperature unit, you can get all\r\n * converted values of all available units\r\n */\r\nstd::vector<float> values2 = mSensor.get_temperatures();\r\nstd::cout << \"vector contains2 : \" << std::endl;\r\nfor (unsigned it = 0; it < values2.size(); it++) {\r\n\t/* C\r\n\t * F\r\n\t * Kelvin\r\n\t */\r\n\tstd::cout << \" Values => \" << values2[it] << std::endl;\r\n}\r\n\r\n/* You be allowed to get the values from the digital thermosensor. and\r\n * if you just specify only one temperature unit, you can get the \r\n * converted values of the specified unit \r\n */\r\nfloat values3 = mSensor.get_temperature(DallasTempSensorDS18Sensor::DEGREES_C);\r\nstd::cout << \" Value in DEGREES_C  => \" << values3 << std::endl;\r\nvalues3 = mSensor.get_temperature(DallasTempSensorDS18Sensor::DEGREES_F);\r\nstd::cout << \" Value in DEGREES_F  => \" << values3 << std::endl;\r\nvalues3 = mSensor.get_temperature(DallasTempSensorDS18Sensor::KELVIN);\r\nstd::cout << \" Value in KELVIN  => \" << values3 << std::endl;\r\n```\r\n\r\n\r\n### Version\r\n---\r\nV1.5.0\r\n\r\n### Installation\r\n---\r\n```sh\r\n$ git clone [git-repo-url] DallasTempSensorDS18CPP\r\n```\r\n\r\n\r\n### Todos\r\n---\r\n - Add Code Comments\r\n - Test code\r\n\r\n### License\r\n----\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Zhichao Wang\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n**Free Software, Hell Yeah!**\r\n","google":"UA-71245732-2","note":"Don't delete this file! It's used internally to help with page regeneration."}